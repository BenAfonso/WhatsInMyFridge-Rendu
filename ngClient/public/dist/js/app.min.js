var myApp=angular.module("WIMF",["ngRoute","ngResource"]);myApp.constant("APILINK","https://stark-basin-30783.herokuapp.com"),myApp.config(function($routeProvider,$httpProvider){$httpProvider.interceptors.push("TokenInterceptor"),$routeProvider.when("/login",{templateUrl:"partials/login.html",controller:"LoginCtrl",access:{requiredLogin:!1}}).when("/register",{templateUrl:"partials/register.html",controller:"RegisterCtrl",access:{requiredLogin:!1}}).when("/panel",{templateUrl:"partials/panel/panel.html",controller:"FrigoCtrl",access:{requiredLogin:!0}}).when("/product/:id",{templateUrl:"partials/product/product.html",controller:"ProductCtrl",access:{requiredLogin:!0}}).when("/mescourses",{templateUrl:"partials/courses/courses.html",controller:"CoursesCtrl",access:{requiredLogin:!0}}).when("/mesrecettes",{templateUrl:"partials/recettes/recettes.html",controller:"RecettesCtrl",access:{requiredLogin:!0}}).when("/recette/:id",{templateUrl:"partials/recettes/recette.html",controller:"RecetteCtrl",access:{requiredLogin:!0}}).when("/",{templateUrl:"partials/home/home.html",controller:"HomeCtrl",access:{requiredLogin:!0}}).otherwise({redirectTo:"/login"})}),myApp.run(function($rootScope,$window,$location,AuthenticationFactory){AuthenticationFactory.check(),$rootScope.$on("$routeChangeStart",function(event,nextRoute,currentRoute){nextRoute.access&&nextRoute.access.requiredLogin&&!AuthenticationFactory.isLogged?$location.path("/login"):(AuthenticationFactory.user||(AuthenticationFactory.user=$window.sessionStorage.user),AuthenticationFactory.userRole||(AuthenticationFactory.userRole=$window.sessionStorage.userRole))}),$rootScope.$on("$routeChangeSuccess",function(event,nextRoute,currentRoute){$rootScope.showMenu=AuthenticationFactory.isLogged,$rootScope.role=AuthenticationFactory.userRole,AuthenticationFactory.isLogged===!0&&"/login"==$location.path()&&$location.path("/")})}),myApp.controller("MainCtrl",["$scope","$http","$location","UserAuthFactory",function($scope,$http,$location,UserAuthFactory){$scope.navstate=!1,$scope.logout=function(){UserAuthFactory.logout()},$scope.go=function(path){componentHandler.upgradeDom(),$location.path(path)},$scope.toggleNav=function(){$scope.navstate=!$scope.navstate},$scope.closeNav=function(){$scope.navstate=!1},$scope.isOpenedNav=function(){return $scope.navstate}}]);var observer=new MutationObserver(function(mutations){for(var upgrade=!1,i=0;i<mutations.length;i++)if(mutations[i].addedNodes.length>0){upgrade=!0;break}upgrade&&window.componentHandler.upgradeDom()});observer.observe(document,{childList:!0,subtree:!0}),myApp.controller("LoginCtrl",["$scope","$window","$location","UserAuthFactory","AuthenticationFactory",function($scope,$window,$location,UserAuthFactory,AuthenticationFactory){$scope.login=function(){var username=$scope.username,password=$scope.password;void 0!==username&&void 0!==password?UserAuthFactory.login(username,password).success(function(data){AuthenticationFactory.isLogged=!0,$window.sessionStorage.token=data.token,$location.path("/home")}).error(function(response){401==response.status?alert("Mot de passe incorrect."):404==response.status?alert("Nom d'utilisateur incorrect."):alert("Une erreur est survenue.")}):alert("Merci de renseignez les champs.")}}]),myApp.controller("RegisterCtrl",["$scope","$window","$location","UserAuthFactory","AuthenticationFactory",function($scope,$window,$location,UserAuthFactory,AuthenticationFactory){$scope.register=function(){$scope.password==$scope.password2?UserAuthFactory.register($scope.username,$scope.password).success(function(){alert("Votre compte a bien été créé, vous allez être redirigé !")}):alert("Les deux mots de passes ne sont pas identiques !")}}]),myApp.factory("AuthenticationFactory",function($window){var auth={isLogged:!1,check:function(){$window.sessionStorage.token?this.isLogged=!0:(this.isLogged=!1,delete this.user)}};return auth}),myApp.factory("UserAuthFactory",function($window,APILINK,$location,$http,AuthenticationFactory){return{login:function(username,password){return $http.post(APILINK+"/login",{username:username,password:password})},logout:function(){AuthenticationFactory.isLogged&&(AuthenticationFactory.isLogged=!1,delete AuthenticationFactory.user,delete AuthenticationFactory.userid,delete AuthenticationFactory.userRole,delete $window.sessionStorage.token,delete $window.sessionStorage.user,delete $window.sessionStorage.userid,delete $window.sessionStorage.userRole,$location.path("/login"))},register:function(username,password){return $http.post(APILINK+"/register",{username:username,password:password})}}}),myApp.factory("TokenInterceptor",function($q,$window){return{request:function(config){return config.headers=config.headers||{},$window.sessionStorage.token&&(config.headers["X-Access-Token"]=$window.sessionStorage.token,config.headers["Content-Type"]="application/json"),config||$q.when(config)},response:function(response){return response||$q.when(response)}}}),myApp.controller("CoursesCtrl",["$scope","Products",function($scope,Products){$scope.products=[],$scope.lowstocks=[],$scope.nostocks=[],$scope.settingsDisplayed=!1,$scope.alertLevel3=.1,$scope.alertLevel2=.3,$scope.alertLevel1=.5,$scope.filterAlertLevel0=!0,$scope.filterAlertLevel1=!0,$scope.filterAlertLevel2=!0,$scope.filterAlertLevel3=!0,Products.query(function(result){$scope.products=result,$scope.getLowStocks()}),$scope.toggleSettings=function(){$scope.settingsDisplayed=!$scope.settingsDisplayed},$scope.alertLevel=function(product){return product.quantity/product.max<$scope.alertLevel3||0===product.max?(product.alertLevel=3,"critical"):product.quantity/product.max<$scope.alertLevel2?(product.alertLevel=2,"alert"):product.quantity/product.max<$scope.alertLevel1?(product.alertLevel=1,"warning"):(product.alertLevel=0,"cool")},$scope.isAlertLevel=function(product,level){return product.alertLevel==level},$scope.isShown=function(product){return 0===product.alertLevel&&$scope.filterAlertLevel0||1==product.alertLevel&&$scope.filterAlertLevel1||2==product.alertLevel&&$scope.filterAlertLevel2||3==product.alertLevel&&$scope.filterAlertLevel3},$scope.getLowStocks=function(){for(i=0;i<$scope.products.length;i++)$scope.products[i].quantity/$scope.products[i].max<.2&&0!==$scope.products[i].max?$scope.lowstocks.push($scope.products[i]):0===$scope.products[i].max&&$scope.nostocks.push($scope.products[i])}}]),myApp.controller("FrigoCtrl",["$scope","Products","Categories",function($scope,Products,Categories){$scope.products=[],$scope.categories=[],Products.query(function(result){$scope.products=result}),Categories.query(function(categories){$scope.categories=categories,console.log(categories)}),$scope.addProductMenu=!1,$scope.leftMenu=!1,$scope.showFiltersMenu=!1,$scope.showSortingMenu=!1,$scope.addFormDisplayed=!1,$scope.selectedCategory=!1,$scope.displayNewCategory=!1,$scope.selectCategory=function(category){$scope.selectedCategory==category||void 0===category?$scope.selectedCategory=!1:$scope.selectedCategory=category},$scope.isSelectedCategory=function(category){return $scope.selectedCategory.idCategory==category.idCategory||!$scope.selectedCategory},$scope.toggleAddForm=function(){$scope.addFormDisplayed=!$scope.addFormDisplayed},$scope.selectProduct=function(product){product.modifying||(void 0!==product.selected?product.selected=!product.selected:product.selected=!0)},$scope.isSelected=function(product){return product.selected},$scope.toggleModifyProduct=function(product){void 0!==product.modifying?product.modifying=!product.modifying:product.modifying=!0},$scope.isModifying=function(product){return product.modifying},$scope.toggleFiltersMenu=function(){$scope.showFiltersMenu=!$scope.showFiltersMenu},$scope.toggleSortingMenu=function(){$scope.showSortingMenu=!$scope.showSortingMenu},$scope.toggleLeftMenu=function(){$scope.leftMenu=!$scope.leftMenu},$scope.addProduct=function(product){$scope.selectedCategory.idCategory&&(product.idCategory=$scope.selectedCategory.idCategory),Products.save(product,function(result){$scope.products.unshift(result),$scope.newProduct={},$scope.toggleAddForm()})},$scope.modifyProduct=function(product){product.$update({id:product.idProduct},function(product){$scope.products[$scope.products.indexOf(product)]=product})},$scope.deleteProduct=function(product){Products["delete"]({id:product.idProduct},function(result){$scope.products.splice($scope.products.indexOf(product),1)})},$scope.addCategory=function(category){Categories.save(category,function(result){$scope.categories.unshift(result),$scope.newCategory={},$scope.displayNewCategory=!1})},$scope.toggleNewCategory=function(){$scope.displayNewCategory=!$scope.displayNewCategory},$scope.deleteCategory=function(category){Categories["delete"]({id:category.idCategory},function(result){$scope.categories.splice($scope.categories.indexOf(category),1)})}}]),myApp.controller("HomeCtrl",["$scope","$http","APILINK",function($scope,$http,APILINK){$http.get(APILINK+"/api/v2/users/me").then(function(response){$scope.username=response.data.username})}]),myApp.controller("ProductCtrl",["$scope","$routeParams","Products","Items",function($scope,$routeParams,Products,Items){$scope.currentDate=new Date,$scope.addItem=!1;var id=$routeParams.id;Products.get({id:id},function(product){$scope.product=product,$scope.product.getQuantityMaxRatio().then(function(result){$scope.product.quantity=result.quantity,$scope.product.max=result.max})}),$scope.saveItem=function(newItem){newItem.idProduct=id,newItem.max=newItem.quantity,Items.save({product_id:id},newItem,function(result){$scope.newItem={},$scope.addItem=!1,result.ratio=100,$scope.items.unshift(result),$scope.product.quantity=parseInt($scope.product.quantity)+parseInt(newItem.quantity),$scope.product.max=parseInt($scope.product.max)+parseInt(newItem.max)})},$scope.showAddItem=function(){$scope.addItem=!$scope.addItem},$scope.addItemShown=function(){return $scope.addItem===!0},Items.query({product_id:id},function(items){$scope.items=items,$scope.items.forEach(function(item){item.setRatio()})}),$scope.editingItem=function(item){return item.editing},$scope.toggleEditItem=function(item){void 0!==item.editing?item.editing=!item.editing:item.editing=!0},$scope.updateItem=function(item){0===parseInt(item.quantity)?Items["delete"]({product_id:id,id:item.idItem},function(result){$scope.items.splice($scope.items.indexOf(item),1)}):item.$update({product_id:id,id:item.idItem},function(result){item.ratio=parseInt(result.quantity/result.max*100),$scope.items[$scope.items.indexOf(item)]=item,$scope.product.setQuantityMaxRatio()})}}]),myApp.controller("RecetteCtrl",["$scope","$routeParams","Recipes","Ingredients","Products",function($scope,$routeParams,Recipes,Ingredients,Products){function setQuantity(ingredient){ingredient.getProductQuantity().then(function(data){ingredient.product.quantity=data.quantity})}$scope.recipe={},$scope.products=[],$scope.ingredients=[],Recipes.get({id:$routeParams.id},function(recipe){$scope.recipe=recipe}),Ingredients.query({recipe_id:$routeParams.id},function(ingredients){$scope.ingredients=ingredients,$scope.ingredients.forEach(setQuantity),Products.query(function(products){$scope.products=products})}),$scope.editQuantity=function(ingredient){void 0!==ingredient.editing?ingredient.editing=!ingredient.editing:ingredient.editing=!0},$scope.edit=function(ingredient){0===parseInt(ingredient).quantity?$scope.deleteIngredient(ingredient):ingredient.$update({recipe_id:ingredient.recipe.idRecipe,product_id:ingredient.product.idProduct},function(result){setQuantity(ingredient),$scope.ingredients[$scope.ingredients.indexOf(ingredient)]=ingredient})},$scope.isEnough=function(ingredient){return parseInt(ingredient.quantity)<parseInt(ingredient.product.quantity)},$scope.selectProduct=function(product){$scope.selectedProduct=product,$scope.selectedProduct.quantity=void 0},$scope.addIngredient=function(ingredient){ingredient.idRecipe=$routeParams.id,Ingredients.save({recipe_id:ingredient.idRecipe},ingredient,function(newingredient){$scope.ingredients.unshift(newingredient),$scope.selectedProduct=void 0}),$scope.products.splice($scope.products.indexOf(ingredient.product),1)},$scope.deleteIngredient=function(ingredient){Ingredients["delete"]({recipe_id:$routeParams.id,product_id:ingredient.product.idProduct},function(){$scope.ingredients.splice($scope.ingredients.indexOf(ingredient),1)})}}]),myApp.controller("RecettesCtrl",["$scope","Recipes","Ingredients",function($scope,Recipes,Ingredients){function setQuantity(ingredient){ingredient.getProductQuantity().then(function(data){ingredient.product.quantity=data.quantity})}$scope.recipes=[],$scope.addFormDisplayed=!1;var addIngredients=function(recipe){Ingredients.get({recipe_id:recipe.idRecipe},function(ingredients){recipe.ingredients=ingredients,recipe.ingredients.forEach(setQuantity)})};$scope.populateIngredients=function(){for(i=0;i<$scope.recipes.length;i++)addIngredients($scope.recipes[i])},Recipes.query(function(recipes){$scope.recipes=recipes,$scope.populateIngredients()}),$scope.toggleAddForm=function(){$scope.addFormDisplayed=!$scope.addFormDisplayed},$scope.addRecipe=function(recipe){Recipes.save(recipe,function(result){$scope.recipes.unshift(result),$scope.newRecipe={},$scope.addFormDisplayed=!1})},$scope.deleteRecipe=function(recipe){Recipes["delete"]({id:recipe.idRecipe},function(result){$scope.recipes.splice($scope.recipes.indexOf(recipe),1)})}}]),myApp.directive("ngConfirmClick",[function(){return{link:function(scope,element,attr){var msg=attr.ngConfirmClick||"Êtes vous sûrs ?",clickAction=attr.confirmedClick;element.bind("click",function(event){window.confirm(msg)&&scope.$eval(clickAction)})}}}]),myApp.factory("Categories",function($resource,APILINK){return $resource(APILINK+"/api/v2/categories/:id",{id:"@id"},{query:{method:"GET",isArray:!0}})}),myApp.factory("Ingredients",function($resource,APILINK,Products,Recipes,$q){var Ingredients=$resource(APILINK+"/api/v2/recipes/:recipe_id/ingredients/:product_id",{recipe_id:"@recipe_id",product_id:"@product_id"},{query:{method:"GET",isArray:!0},get:{method:"GET",isArray:!0},update:{method:"PUT"}});return Ingredients.prototype.getProduct=function(){var deferred=$q.defer();return Products.get({id:this.product.idProduct},function(product){deferred.resolve(product)}),deferred.promise},Ingredients.prototype.isAvailable=function(fn){var deferred=$q.defer();return this.product.quantity>this.quantity&&deferred.resolve(!0),deferred.promise},Ingredients.prototype.getProductQuantity=function(){var deferred=$q.defer();return Products.get({id:this.product.idProduct},function(product){deferred.resolve(product)}),deferred.promise},Ingredients}),myApp.factory("Items",function($resource,APILINK){var Items=$resource(APILINK+"/api/v2/products/:product_id/items/:id",{product_id:"@product_id",id:"@id"},{query:{method:"GET",isArray:!0},update:{method:"PUT"}});return Items.prototype.getProduct=function(){Products.get({id:this.product.idProduct},function(product){return product})},Items.prototype.setRatio=function(){this.ratio=parseInt(this.quantity/this.max*100)},Items}),myApp.factory("Products",function($resource,$q,APILINK,Items){var Products=$resource(APILINK+"/api/v2/products/:id",{id:"@id"},{query:{method:"GET",isArray:!0},update:{method:"PUT"}});return Products.prototype.getItems=function(){var deferred=$q.defer();return Items.query({product_id:this.idProduct},function(items){deferred.resolve(items)}),deferred.promise},Products.prototype.getQuantityMaxRatio=function(){var result={},deferred=$q.defer();return Items.query({product_id:this.idProduct},function(items){var sum=0,max=0;for(i=0;i<items.length;i++)sum+=parseInt(items[i].quantity),max+=parseInt(items[i].max),items[i].ratio=parseInt(items[i].quantity/items[i].max*100);result.quantity=sum,result.max=max,deferred.resolve(result)}),deferred.promise},Products}),myApp.factory("Recipes",function($resource,APILINK,$q){var Recipes=$resource(APILINK+"/api/v2/recipes/:id",{id:"@id"},{query:{method:"GET",isArray:!0}});return Recipes.prototype.getIngredients=function(){var deferred=$q.defer();return Ingredients.query({recipe_id:this.id},function(ingredients){deferred.resolve(ingredients)}),deferred.promise},Recipes});